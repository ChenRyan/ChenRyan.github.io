(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{401:function(n,e,t){"use strict";t.r(e);var v=t(15),_=Object(v.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("项目十三天:\n发现:基础知识点--\x3e回首复习\n分页\n购物车\n登录、注册")]),n._v(" "),e("p",[n._v("1)交易业务\n前面课程当中可能自己已经注册了一个账号【18666666661】，今天在做支付的时候，统一使用\n账号:13700000000\n密码:111111")]),n._v(" "),e("p",[n._v("1.1获取用户地址信息、获取用户购物车清单信息\n//用户地址信息\n/api/user/userAddress/auth/findUserAddressList\n//商品清单接口\n/api/order/auth/trade")]),n._v(" "),e("p",[n._v("1.2Vuex的action发请求，但是从今天开始，咱们要练习不用Vuex改如何开发？\n请求配置,类似$bus使用")]),n._v(" "),e("p",[n._v("2)展示商品清单数据")]),n._v(" "),e("p",[n._v("3)提交订单业务")]),n._v(" "),e("p",[n._v("当用户点击提交订单按钮的时候，需要发请求的\n提交订单的请求地址:/api/order/auth/submitOrder?tradeNo={tradeNo}")]),n._v(" "),e("p",[n._v("前台：需要告诉服务器：谁买的、买的啥、买几个、 支付多少钱、留言信息...\n后台：订单号，这笔交易的一个标识符【支付的】")]),n._v(" "),e("p",[n._v("axios({url:'xxx',methods:'post',data:{a:1}})")]),n._v(" "),e("p",[n._v("3.1微信支付、支付宝支付等等\n交易编码（服务器：字符串hash）\n收件人名字\n收件人手机号\n收件的地址\n买家留言信息\n支付产品")]),n._v(" "),e("p",[n._v("4)获取支付信息进行展示")]),n._v(" "),e("p",[n._v("5)element-ui官方UI组件库（插件）？")]),n._v(" "),e("p",[n._v("react框架:\nUI组件库antd【蚂蚁金服旗下PC端UI组件库】\nantd-mobile【蚂蚁金服旗下的移动端UI组件库】")]),n._v(" "),e("p",[n._v("Vue框架:\nelement-UI【饿了吗旗下的UI组件库，官方承认的PC组件库插件】\nvant【Vue官方提供移动端UI组件库】")]),n._v(" "),e("p",[n._v("官网地址:https://element.eleme.cn/#/zh-CN\n官网地址：https://youzan.github.io/vant/#/zh-CN/")]),n._v(" "),e("p",[n._v("第一步：项目中安装element-ui组件库 [2.15.6版本：Vue2]")]),n._v(" "),e("p",[n._v("第二步：在入口文件引入elementUI组件库\n第一种：全部引入【不采用：因为项目中只是用到一个组件，没必要全都引入进来】\n第二种：按需引入【按照开发需求引入相应的组件，并非全部组件引入】")]),n._v(" "),e("p",[n._v("第三步：按需引入，安装相应的插件\ncnpm install babel-plugin-component -D\n文档中说的.babelrc文件，即为babel.config.js文件\n修改完babel.config.js配置文件以后，项目重启")]),n._v(" "),e("p",[n._v("第四部：按照需求引入相应的组件即可")]),n._v(" "),e("p",[n._v("Vue.component();\nVue.prototype.$xxx = xxx;")]),n._v(" "),e("p",[n._v("6)支付业务【微信支付】\nthis.$alert('"),e("strong",[n._v("这是 "),e("i",[n._v("HTML")]),n._v(" 片段")]),n._v("', 'HTML 片段', {dangerouslyUseHTMLString: true});\n6.1今晚稍微把elementUI的组件都稍微看看。\n6.2使用messageBox显示弹框\n6.3展示二维码----qrcode插件\n通过qrCode.toDataUrl方法，将字符串转换为加密的在线二维码链接，通过图片进行展示。\nmoment.js\nswiper.js\nnprogress.js\nqrcode.js")]),n._v(" "),e("p",[n._v("GET|POST：短轮询，请求发一次，服务器响应一次，完事。")]),n._v(" "),e("p",[n._v("第一种做法:前端开启定时器，一直找服务器要用户支付信息【定时器】")]),n._v(" "),e("p",[n._v("第二种做法:项目务必要上线 + 和后台紧密配合\n当用户支付成功以后，需要后台重定向到项目某一个路由中，将支付情况通过URL参数形式传给前端，\n前端获取到服务器返回的参数，就可以判断了。")])])}),[],!1,null,null,null);e.default=_.exports}}]);