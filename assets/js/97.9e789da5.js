(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{403:function(e,n,a){"use strict";a.r(n);var v=a(15),t=Object(v.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"项目day14"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目day14"}},[e._v("#")]),e._v(" 项目day14:")]),e._v(" "),n("p",[e._v("分页、登录注册、购物车、支付->这几个业务有疑问的地方及时喊我\nelementUI:今晚在稍微看看【后台管理系统项目：全都是用elementUI】")]),e._v(" "),n("p",[e._v("1)个人中心路由搭建\n1.1当年学习路由的时候:一级路由、二级路由、三级路由 【二级路由搭建】\n1.2完成个人中心数据的展示【分页】")]),e._v(" "),n("p",[e._v("2)未登录全局守卫的判断")]),e._v(" "),n("p",[e._v("在前面课程当中:导航守卫【导航:路由发生变化，守卫可以检测到，通过判断，确定这次路由跳转】")]),e._v(" "),n("p",[e._v("前置守卫：在路由跳转之前，进行判断\n后置守卫:路由都已经跳转完毕才执行。")]),e._v(" "),n("p",[e._v("未登录的情况:\n全局守卫:只要的项目当中任何某一个路由发生变化，就会出发。\n项目守卫使用:一般有用前置全局守卫")]),e._v(" "),n("p",[e._v("用户登录:")]),e._v(" "),n("p",[e._v("用户未登录：点击购物车的结算按钮->交易页面【没有登录:去不了】\n未登录不能调到支付页面\n未登录不能调到支付成功页面\n未登录不能去个人中心【都不知道你是谁：展示谁的个人中心啊】")]),e._v(" "),n("p",[e._v("3)路由独享守卫\n路由独享守卫：需要在配置路由的地方使用\n导航守卫:全局守卫->项目当中有任何路由变化【a->b,b->d】触发。\n路由独享守卫：专门负责某一个路由")]),e._v(" "),n("p",[e._v("用户登陆了:\n去交易页面:从购物车才能跳转到交易页面。")]),e._v(" "),n("p",[e._v("next():你本来想去哪里，我就放行，你就去完事了。")]),e._v(" "),n("p",[e._v("next('/login'):执行守卫放行到执行的路由。")]),e._v(" "),n("p",[e._v("next(false):路由跳转的时候，从哪里来回那里去。")]),e._v(" "),n("p",[e._v("4)组件内守卫----\x3e一般很少用【全局 + 路由独享守卫】\n组件内守卫：也是专门负责某一个路由【并非负责全部路由】，写法和路由独享守卫有区别？\n组件内守卫需要书写在组件内部")]),e._v(" "),n("p",[e._v("beforeRouteEnter\nbeforeRouteUpdate (2.2 新增)\nbeforeRouteLeave")]),e._v(" "),n("p",[e._v("6)路由懒加载\n面试【高频的面试】:项目的性能优化手段有哪些？\nv-if|v-show:尽可能采用v-show\n按需引入【lodash、elementUI】\n防抖与节流\n路由懒加载：当用户访问的时候，加载对应组件进行展示。")]),e._v(" "),n("p",[e._v("7)图片懒加载\nvue-lazyload:图片懒加载\n图片：比用用户网络不好，服务器的数据没有回来，\n总不可能让用户看白色，至少有一个默认图片在展示。")]),e._v(" "),n("p",[e._v("8)表单验证【后台管理系统：大量使用elementUI】\n以后工作的时候经常会进行表单验证【element-ui】进行表单验证，so 简单。\n项目当中表单验证功能比较常见的。")]),e._v(" "),n("p",[e._v("8.1vee-validate插件：Vue官方提供的一个表单验证的插件【老师接下来的操作能大概看懂即可】\n这个插件很难用：如果你翻看它的文档（看一个月：不保证能看懂），依赖文件很多（文档书写的很难理解）\n花大量时间学习，很难搞懂。")]),e._v(" "),n("p",[e._v("8.2哪怕将来工作了，真的使用vee-valadiate【老师项目搞出来：改老师代码即可】")]),e._v(" "),n("p",[e._v("使用步骤：\n1：安装vee-valadite，别安装最新版本@2\n2：在plugins文件夹中创建一个validate.js[专门注册vee-valadite]\n3:注册插件\n4：注册插件的时候，用中文，以及需要验证的字段【用中文显示提示形式】\n5：在入口文件需要引入执行一次\n6:使用vee-valadiate插件")]),e._v(" "),n("p",[e._v("8)vee-validate 基本使用")]),e._v(" "),n("p",[e._v("第一步：插件安装与引入\ncnpm i vee-validate@2 --save  安装的插件安装2版本的")]),e._v(" "),n("p",[e._v("import VeeValidate from 'vee-validate'\nimport zh_CN from 'vee-validate/dist/locale/zh_CN'   // 引入中文 message\nVue.use(VeeValidate)")]),e._v(" "),n("p",[e._v("第二步：提示信息\nVeeValidate.Validator.localize('zh_CN', {\nmessages: {\n...zh_CN.messages,\nis: (field) => "),n("code",[e._v("${field}必须与密码相同")]),e._v(" // 修改内置规则的 message，让确认密码和密码相同\n},\nattributes: { // 给校验的 field 属性名映射中文名称\nphone: '手机号',\ncode: '验证码',\npassword:'密码',\npassword1:'确认密码',\nisCheck:'协议'\n}\n})")]),e._v(" "),n("p",[e._v("第三步：基本使用")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<input\n          placeholder="请输入你的手机号"\n          v-model="phone"\n          name="phone"\n          v-validate="{ required: true, regex: /^1\\d{10}$/ }"\n          :class="{ invalid: errors.has(\'phone\') }"\n        />\n<span class="error-msg">{{ errors.first("phone") }}</span>\n\nconst success = await this.$validator.validateAll(); //全部表单验证\n//自定义校验规则\n//定义协议必须打勾同意\nVeeValidate.Validator.extend(\'agree\', {\nvalidate: value => {\nreturn value\n},\ngetMessage: field => field + \'必须同意\'\n})\n\n')])])])])}),[],!1,null,null,null);n.default=t.exports}}]);